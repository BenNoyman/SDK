package com.example.vulnerabilitysdksystem.example;

import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.example.vulnerabilitysdksystem.R;
import com.example.vulnerabilitysdksystem.vulnerabilities.controller.VulnerabilitiesController;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.AuthResponse;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.ScanResponse;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.Vulnerability;

public class MainActivity extends AppCompatActivity {
    private VulnerabilitiesController controller;
    private EditText usernameInput, passwordInput, codeInput;
    private TextView resultText;
    private Button registerBtn, loginBtn, scanBtn;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_test);

        // Initialize controller
        controller = new VulnerabilitiesController();

        // Initialize views
        usernameInput = findViewById(R.id.username_input);
        passwordInput = findViewById(R.id.password_input);
        codeInput = findViewById(R.id.code_input);
        resultText = findViewById(R.id.result_text);
        registerBtn = findViewById(R.id.register_btn);
        loginBtn = findViewById(R.id.login_btn);
        scanBtn = findViewById(R.id.scan_btn);

        // Set up button listeners
        registerBtn.setOnClickListener(v -> testRegistration());
        loginBtn.setOnClickListener(v -> testLogin());
        //scanBtn.setOnClickListener(v -> testScan());
    }

    private void testRegistration() {
        String username = usernameInput.getText().toString();
        String password = passwordInput.getText().toString();

        controller.register(username, password, new VulnerabilitiesController.Callback<AuthResponse>() {
            @Override
            public void onSuccess(AuthResponse response) {
                runOnUiThread(() -> {
                    resultText.setText("Registration successful!\nToken: " + response.getToken());
                    Toast.makeText(MainActivity.this, "Registration successful", Toast.LENGTH_SHORT).show();
                });
            }

            @Override
            public void onError(String error) {
                runOnUiThread(() -> {
                    resultText.setText("Registration failed: " + error);
                    Toast.makeText(MainActivity.this, "Registration failed: " + error, Toast.LENGTH_SHORT).show();
                });
            }
        });
    }

    private void testLogin() {
        String username = usernameInput.getText().toString();
        String password = passwordInput.getText().toString();

        controller.login(username, password, new VulnerabilitiesController.Callback<AuthResponse>() {
            @Override
            public void onSuccess(AuthResponse response) {
                runOnUiThread(() -> {
                    resultText.setText("Login successful!\nToken: " + response.getToken());
                    Toast.makeText(MainActivity.this, "Login successful", Toast.LENGTH_SHORT).show();
                });
            }

            @Override
            public void onError(String error) {
                runOnUiThread(() -> {
                    resultText.setText("Login failed: " + error);
                    Toast.makeText(MainActivity.this, "Login failed: " + error, Toast.LENGTH_SHORT).show();
                });
            }
        });
    }

    /*private void testScan() {
        String code = codeInput.getText().toString();
        // Using Java as default language for testing
        String language = "java";

        controller.scanCode(code, language, new VulnerabilitiesController.Callback<ScanResponse>() {
            @Override
            public void onSuccess(ScanResponse response) {
                runOnUiThread(() -> {
                    StringBuilder result = new StringBuilder();
                    result.append("Scan completed!\n");
                    result.append("Status: ").append(response.getStatus()).append("\n");
                    result.append("Found ").append(response.getVulnerabilities().size()).append(" vulnerabilities:\n\n");

                    for (Vulnerability vuln : response.getVulnerabilities()) {
                        result.append("Type: ").append(vuln.getType()).append("\n");
                        result.append("Severity: ").append(vuln.getSeverity()).append("\n");
                        result.append("Line: ").append(vuln.getLineNumber()).append("\n");
                        result.append("Description: ").append(vuln.getDescription()).append("\n");
                        result.append("Suggestion: ").append(vuln.getSuggestion()).append("\n\n");
                    }

                    resultText.setText(result.toString());
                    Toast.makeText(MainActivity.this, "Scan completed", Toast.LENGTH_SHORT).show();
                });
            }

            @Override
            public void onError(String error) {
                runOnUiThread(() -> {
                    resultText.setText("Scan failed: " + error);
                    Toast.makeText(MainActivity.this, "Scan failed: " + error, Toast.LENGTH_SHORT).show();
                });
            }
        });
    }*/
} 