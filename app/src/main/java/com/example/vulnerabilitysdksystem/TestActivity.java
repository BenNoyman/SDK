package com.example.vulnerabilitysdksystem;

import android.os.Bundle;
import android.util.Log;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.example.vulnerabilitysdksystem.vulnerabilities.controller.VulnerabilitiesController;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.AuthResponse;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.DeleteResponse;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.ScanResponse;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.ScanHistoryResponse;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.ScanResults;
import com.example.vulnerabilitysdksystem.vulnerabilities.model.Vulnerability;

public class TestActivity extends AppCompatActivity {
    private static final String TAG = "TestActivity";
    private VulnerabilitiesController controller;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        controller = new VulnerabilitiesController();
        Log.i(TAG, "Starting full API test sequence...");
        //registerAndStartTest();
        String code = "public class LoginService {\n" +
                "    public void authenticate(String user, String pass) {\n" +
                "        String password = \"admin123\";\n" +
                "        System.out.println(\"Connecting to http://example.com\");\n" +
                "    }\n" +
                "}";
        //newScan(code);
        //deleteScan();
        //showScan();
        showHistory();

    }
    private void showHistory(){
        controller.getScanHistory("GSTI", new VulnerabilitiesController.Callback<ScanHistoryResponse>() {
            @Override
            public void onSuccess(ScanHistoryResponse response) {

            }

            @Override
            public void onError(String error) {

            }
        });

    }

    private void showScan(){
        controller.getScanDetails("GSTI", "681f0960c3818f3b76d3f5b4", new VulnerabilitiesController.Callback<ScanResponse>() {
            @Override
            public void onSuccess(ScanResponse response) {

            }

            @Override
            public void onError(String error) {

            }
        });

    }


    private void deleteScan(){
        controller.deleteScan("GSTI", "681f0960c3818f3b76d3f5b4", new VulnerabilitiesController.Callback<DeleteResponse>() {
            @Override
            public void onSuccess(DeleteResponse response) {

            }

            @Override
            public void onError(String error) {

            }
        });

    }

    private void newScan(String code){
        controller.scanCode("GSTI", code, "java", new VulnerabilitiesController.Callback<ScanResponse>() {
            @Override
            public void onSuccess(ScanResponse response) {

            }

            @Override
            public void onError(String error) {

            }
        });

    }

    private void registerAndStartTest() {
        controller.register("Ben41", "pass21", new VulnerabilitiesController.Callback<AuthResponse>() {
            @Override
            public void onSuccess(AuthResponse response) {
                Log.i(TAG, "Registration successful");
                // After registration, we can directly start scanning
            }

            @Override
            public void onError(String error) {
                Log.e(TAG, "Registration failed: " + error);
                Toast.makeText(TestActivity.this, "Registration failed: " + error, Toast.LENGTH_LONG).show();
            }
        });
    }


} 