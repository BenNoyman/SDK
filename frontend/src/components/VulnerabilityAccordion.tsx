import React, { useState } from 'react';
import { Finding } from '../types';
import { ChevronDown, ChevronUp } from 'lucide-react';

interface AccordionProps {
  finding: Finding;
}

// Map severity levels to color classes
const severityColors = {
  critical: 'bg-red-100 text-red-800 border-red-400',
  high: 'bg-orange-100 text-orange-800 border-orange-400',
  medium: 'bg-amber-100 text-amber-800 border-amber-400',
  low: 'bg-blue-100 text-blue-800 border-blue-400',
  info: 'bg-gray-100 text-gray-800 border-gray-400',
};

const VulnerabilityAccordion: React.FC<AccordionProps> = ({ finding }) => {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <div className="border rounded-md mb-4 overflow-hidden">
      <div 
        className={`${severityColors[finding.severity]} border-l-4 p-4 cursor-pointer flex justify-between items-center`}
        onClick={() => setIsOpen(!isOpen)}
        aria-expanded={isOpen}
      >
        <div>
          <span className="font-medium">{finding.category}</span>
          <span className="ml-3 text-sm">Line: {finding.line ?? finding.lineNumber ?? ''}</span>
        </div>
        <div className="flex items-center">
          <span className="uppercase text-xs font-bold px-2 py-1 rounded mr-3">
            {finding.severity}
          </span>
          {isOpen ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
        </div>
      </div>
      
      {isOpen && (
        <div className="p-4 bg-white transition-all">
          <h4 className="font-medium mb-2">Description</h4>
          <p className="text-gray-700 mb-4">{finding.description}</p>
          
          <h4 className="font-medium mb-2">Suggestion</h4>
          <p className="text-gray-700">{finding.suggestion}</p>
        </div>
      )}
    </div>
  );
};

export default VulnerabilityAccordion;